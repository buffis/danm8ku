: title
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x80 0x79 0x00 0x60 0x0C 0x0C 0x3E
        0x0C 0x9B 0xFD 0x20 0x63 0x1C 0x0C 0x3E
        0x0C 0xFB 0xCD 0x70 0xE7 0x1C 0x1E 0x23
        0x0C 0xF3 0xFD 0xF8 0xCF 0x1E 0x1F 0x21
        0x0C 0xC3 0xFD 0xD8 0xCD 0x1E 0x9B 0x21
        0x1C 0xE3 0xCD 0xDD 0xDD 0x9E 0xBF 0x21
        0x98 0xF3 0x8D 0xCD 0xD9 0x9F 0x3F 0x23
        0xF8 0xF9 0x9D 0xCD 0xD9 0xDB 0x71 0x3F
        0xF0 0x98 0xF9 0xCD 0xD9 0xD9 0x60 0x3C
        0x00 0x00 0xF8 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
:const BULLET_AREA title

: difficulty_select 
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0xF0 0xFF 0xFF 0xFF 0xFF 0x0F 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x80 0x74 0xCC 0x01 0x00 0x00
        0x00 0x00 0x80 0x84 0x12 0x01 0x00 0x00
        0x00 0x00 0x80 0x63 0x9E 0x01 0x00 0x00
        0x00 0x00 0x80 0x10 0x12 0x01 0x00 0x00
        0x00 0x00 0x80 0xE3 0xD2 0x01 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0xF0 0xFF 0xFF 0xFF 0xFF 0x0F 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0xC8 0x44 0xCE 0x24 0x00 0x00
        0x00 0x00 0x28 0x6D 0x29 0x25 0x00 0x00
        0x00 0x00 0xE8 0x55 0x2E 0x35 0x00 0x00
        0x00 0x00 0x28 0x45 0x2A 0x2D 0x00 0x00
        0x00 0x00 0x2E 0x45 0xC9 0x24 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0xF0 0xFF 0xFF 0xFF 0xFF 0x0F 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x18 0x53 0x32 0x11 0x00 0x00
        0x00 0x00 0xA0 0x54 0x4A 0x1B 0x00 0x00
        0x00 0x00 0xA0 0x57 0x7B 0x15 0x00 0x00
        0x00 0x00 0xA0 0xD4 0x4A 0x11 0x00 0x00
        0x00 0x00 0x98 0x54 0x4A 0x11 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0xF0 0xFF 0xFF 0xFF 0xFF 0x0F 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
        0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: diff_select 0xA8 

: title_screen
    va := 56  # x
    vb := 0   # y
    vc := 1   # stride
    i := title
    loop
        sprite va vb 1
        i  += vc
        va += -8
        if va == -8 then vb +=  1
        if va == -8 then va := 56
        if vb != 32 then
    again
    vf := key
    vf := key
;

: difficuly_select
    clear
    va := 56  # x
    vb := 0   # y
    vc := 1   # stride
    i := difficulty_select
    loop
        sprite va vb 1
        i  += vc
        va += -8
        if va == -8 then vb +=  1
        if va == -8 then va := 56
        if vb != 32 then
    again
    v0 := 11
    v1 := 16
    i := diff_select
    sprite v0 v1 1
    v0 += 37
    sprite v0 v1 1
    vf := key
    vf := key
;

# Position (4)
:alias x    v4
:alias x_f  v6
:alias y    v5
:alias y_f  v7

# Velocity (2)
:alias vx   v0
:alias vy   v1

# Acceleration (2)
:alias ax   v2
:alias ay   v3  # Not actually used right now.

: bullet_count 0
: player_position 5 15
: ticks 0
: pattern_state 0x00

# ORDER OF THESE ARE IMPORTANT. DON'T REORDER.
: bul_nop 0x00 0x00 0x00 0x00   # 0
: bul_r 0x00 0xA0 0xA0 0x00     # 1
: bul_l 0x00 0x50 0x50 0x00     # 2
: bul   0x00 0x60 0x60 0x00     # 3 (not used for movement)
: bul_d 0x60 0x00 0x60 0x00     # 4
: bul_dr 0xC0 0xA0 0x60 0x00    # 5
: bul_dl 0x30 0x50 0x60 0x00    # 6
: UNUSED2 0 0 0 0               # 7 (unused) TODO: Store something here?
: bul_u 0x00 0x60 0x00 0x60     # 8
: bul_ur 0x00 0x60 0xA0 0xC0    # 9
: bul_ul 0x00 0x60 0x50 0x30    # 10

# ORDER OF THESE ARE IMPORTANT. DON'T REORDER.
: clr_nop 0x00 0x60 0x60 0x00   # 0
: clr_r 0x00 0xC0 0xC0 0x00     # 1
: clr_l 0x00 0x30 0x30 0x00     # 2
: UNUSED3   0x00 0x60 0x60 0x00 # 3 (unused) TODO: Store something here?
: clr_d 0x60 0x60 0x00 0x00     # 4
: clr_dr 0xC0 0xC0 0x00 0x00    # 5
: clr_dl 0x30 0x30 0x00 0x00    # 6
: UNUSED4 0 0 0 0               # 7 (unused) TODO: Store something here?
: clr_u 0x00 0x00 0x60 0x60     # 8
: clr_ur 0x00 0x00 0xC0 0xC0    # 9
: clr_ul 0x00 0x00 0x30 0x30    # 10

: vstack 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

: player_sprite 0xC0 0x60 0xC0
: ouch_sprite1 0xEA 0xAA 0xAA 0xAA 0xEE 
: ouch_sprite2 0xEA 0x8A 0x8E 0x8A 0xEA
: win_sprite1  0x8B 0x8A 0x8A 0xAA 0x53
: win_sprite2  0xD1 0x51 0x51 0x55 0xCA


: rightarea
0x1E 0x10 0x10 0x10 0x1E 0x10 0x10 0x10 
: rightareaok
0xA0 0x40 0xA0


: destroy_bullet
    vx := 255
    save_bullet
    i := clr_nop 
    ay <<= ay
    ay <<= ay
    i += ay
    sprite x y 4
;

: move_bullet
    # Handles velocity for x
    vc := vx
    vx <<= vx      # multiply by two and check for neg bit             
    va := vf       # is negative velocity?
    x_f += vx      # add v to fractional x
    vx := vc

    # Hack to avoid calling subroutines to do:
    # if vf != 0 -> (va==0 -> x+=1, va==1 -> x-=1)
    # on fractional overflow
    va &= vf
    v9 := vf
    v9 -= va
    v9 -= va
    x += v9

    # Handles velocity for y
    vc := vy
    vy <<= vy      # multiply by two and check for neg bit       
    va := vf       # is negative velocity?
    y_f += vy      # add v to fractional x
    vy := vc

    # Hack to avoid calling subroutines to do:
    # if vf != 0 -> (va==0 -> y+=1, va==1 -> y-=1)
    # on fractional overflow
    va &= vf
    vd := vf
    vd -= va
    vd -= va
    y += vd

    # Handles acceleration for x
    vc := ax
    vc <<= vc      # multiply by two and check for neg bit             
    va := vf       # is negative velocity?
    vc >>= vc      # shift back, cause why not
    
    # ... keeps handling acceleration for x
    if va == 0 begin        # positive acceleration
        if vx > 127 begin   # negative velocity
            vx -= ax
            if vf == 0 then vx := 127  # overflow (wat?)
            if vx < 128 then vx := 0

        else            # positive velocity
            vx += ax
            if vf != 0 then vx := 127  # overflow
            if vx > 127 then vx := 127
        end
     
    else                    # negative acceleration
        if vx > 127 begin   # negative velocity
            vx += vc
            if vf != 0 then vx := 254   # hack
            if vx == 255 then vx := 254 # hack 
        else            # positive velocity
            vx -= vc
            if vf == 0 then vx := 129  # overflow
        end
    end

    # Set ay to values used to get movement sprites.
    ay := v9
    if v9 > 1 then
      ay := 2
    if vd > 1 then
      vd := 2
    vd <<= vd
    vd <<= vd
    ay |= vd

    # Do bounds checks
    if x > 62 then destroy_bullet
    if y > 29 then destroy_bullet

;

: save_bullet
    i := BULLET_AREA
    i += vb
    save v7
;

: draw_bullets
    vb := 0 # offset
    loop
        i := BULLET_AREA
        i += vb
        load v7
        
        # draw bullet if active
        if vx != 255 begin
            # This is pretty cool.
            i := bul_nop
            ay <<= ay
            ay <<= ay
            i += ay
            sprite x y 4
        end 
        
        vb += 8 # sizeof bullet
        if vb != 0 then
    again
;

: act_bullets
    vb := 0 # offset
    loop
        i := BULLET_AREA
        i += vb
        load v7
        
        if vx != 255 then move_bullet
        if vx != 255 then save_bullet
        
        vb += 8 # sizeof bullet
        if vb != 0 then
    again
;

: clear_state
    v0 := 0
    i := ticks
    save v0
    i := pattern_state
    save v0
;

: clear_bullets
    vb := 0 # offset
    i := BULLET_AREA
    v0 := 255 v1 := 0 v2 := 0 v3 := 0
    v4 := 0   v5 := 0 v6 := 0 v7 := 0 
    loop
        save v7
        vb += 1
        if vb != 32 then
    again
;

: gogo_bullet
    i := vstack
    save v7

    i := bullet_count
    load v0
    
    i := BULLET_AREA
    i += v0
    load v7

    v8 := 0
    if vx == 255 begin
        i := bullet_count
        load v0
        va := v0
        v0 += 8
        i := bullet_count
        save v0
        v8 := 1
    end

    i := vstack
    load v7
    ay := 0

    i := BULLET_AREA
    i += va
;

: sync
    loop
        vf := delay
        if vf != 0 then
    again
    vf := 1
    delay := vf
;

: tick
    i := ticks
    load v0
    v0 += 1
    i := ticks
    save v0
;

: update_player
    i := player_position
    load v1

    v3 >>= v1
    v2 >>= v0
    i := player_sprite
    sprite v2 v3 3

    v2 := 5
    if v2 key begin
        v1 += -1
        if v1 == 0 then v1 := 1
    end
    v2 := 7
    if v2 key begin
        v0 += -1
        if v0 == 0 then v0 := 1
    end
    v2 := 9
    if v2 key begin
        v0 += 1
        if v0 == 35 then v0 := 34
    end
    v2 := 8
    if v2 key begin
        v1 += 1
        if v1 == 60 then v1 := 59
    end

    i := player_position
    save v1
    v3 >>= v1
    v2 >>= v0
    i := player_sprite
    sprite v2 v3 3
;

: show_you_lose_screen
    clear
    i := ouch_sprite1
    v0 := 25
    v1 := 13
    sprite v0 v1 5
    i := ouch_sprite2
    v0 += 8
    sprite v0 v1 5
    v0 := key
    v0 := key
;   

: show_you_win_screen
    clear
    i := win_sprite1
    v0 := 25
    v1 := 13
    sprite v0 v1 5
    i := win_sprite2
    v0 += 8
    sprite v0 v1 5
    v0 := key
    v0 := key
;   

: next_pattern
    i := pattern_state
    load v0
    v0 += 1
    i := pattern_state
    save v0
  
    v2 := 61
    v1 := 1
    v0 >>= v0
    if vf == 0 begin
        loop
            if v0 != 1 begin
                v1 += 4
                v0 += -1
                again
            end
        i := rightareaok 
        sprite v2 v1 3
    end
;

: handle_pattern
    i := pattern_state
    load v0
    vf := 1
    v0 &= vf
    if v0 == 1 begin
        if vd == 140 begin
            v0 := 254
            i := ticks
            save v0
        end
    else
        i := pattern_state
        load v0
        jump0 patterns
    end
    : pattern_done
;

: draw_rightarea
    i := rightarea
    v0 := 57
    v1 := 0
    sprite v0 v1 8
    v1 += 8
    sprite v0 v1 8
    v1 += 8
    sprite v0 v1 8
    v1 += 8
    sprite v0 v1 8
;

: main
    title_screen
: after_title
    difficuly_select

    clear_state
    clear_bullets
    clear

    draw_rightarea

    i := player_position
    load v1
    v3 >>= v1
    v2 >>= v0
    i := player_sprite
    sprite v2 v3 3

    loop
        draw_bullets # do this first cause...
        update_player

        if vf != 1 begin
            act_bullets  # ... this takes a long time

            i := ticks
            load v0
            vd := v0

            handle_pattern  # spawns bullets

            if vd == 255 then
                next_pattern
            
            tick
            sync
            again
        end
        
    show_you_lose_screen
    jump after_title


############################### PATTERNS BELOW ############################### 

: pew_pew
    save v7
    i := bul
    sprite x y 4
;

: pattern1
    v0 := 0b00000011
    v0 &= vd
    if v0 == 0b00000011 begin
        vc := random 31
        gogo_bullet
        if v8 == 1 begin
            vx := random 63
            vx += 170
            x := 55 y := vc pew_pew
        end
    end
    jump pattern_done

: pattern2
    v0 := 0b00000011
    v0 &= vd
    if v0 == 0b00000011 begin
        vc := random 31
        gogo_bullet
        if v8 == 1 begin
            vx := random 127
            vx += 127
            x := 57 y := vc  vy := 35 ax := 0 pew_pew
        end

        vc := random 31
        gogo_bullet
        if v8 == 1 begin
            vx := random 127
            vx += 127
            x := 57 y := vc  vy := 155 ax := 0 pew_pew
        end
    end
    jump pattern_done

: digits100  0
: digits10   0
: digits1    0
: pattern3values
206 50  210 46  214 42  218 38  222 34  226 30
230 26  234 22  238 18  242 14  246 10  250 6
254 2   250 130 246 134 242 138 238 142 234 146
230 150 226 154 222 158 218 162 214 166 210 170
206 174
: pattern3
    i := digits100
    bcd vd
    i := digits100
    load v2
    if v2 == 0 begin
        if v0 == 1 then v1 += 10
        if v0 == 2 then v1 += 20
        v1 <<= v1
        i += v1
        load v1
        gogo_bullet x := 60 y := 16 pew_pew
    end
    jump pattern_done

: pattern4
    v0 := 0b00001111
    v0 &= vd
    if v0 == 0b00001111 begin
        vc := random 31
        x := 60 y := vc vx := 150 vy := 0
        gogo_bullet ax := 130 pew_pew 
        gogo_bullet ax := 134 pew_pew 
        x := 45 y := vc vx := 75 ax := 130 
        gogo_bullet vy := 135 pew_pew    
        gogo_bullet vy := 10  pew_pew 
    end
    jump pattern_done

: pattern5
    v0 := 0b00011111
    v0 &= vd
    if v0 == 0b00011111 begin
        vc := random 31
        gogo_bullet x := 35 y := vc vx := 66 vy := 12 ax := 129 pew_pew
        gogo_bullet x := 35 y := vc vx := 66 vy := 130 ax := 129 pew_pew
    end
    if vd == 64 begin
        vc := random 31
        gogo_bullet x := 50 y := vc vx := 230 vy := 0 pew_pew
        gogo_bullet x := 54 y := vc vx := 230 vy := 0 pew_pew
        gogo_bullet x := 58 y := vc vx := 230 vy := 0 pew_pew
    end
    if vd == 128 begin
        vc := random 31
        gogo_bullet x := 50 y := vc vx := 230 vy := 0 pew_pew
        gogo_bullet x := 54 y := vc vx := 230 vy := 0 pew_pew
        gogo_bullet x := 58 y := vc vx := 230 vy := 0 pew_pew
    end
    if vd == 192 begin
        vc := random 31
        gogo_bullet x := 50 y := vc vx := 230 vy := 0 pew_pew
        gogo_bullet x := 54 y := vc vx := 230 vy := 0 pew_pew
        gogo_bullet x := 58 y := vc vx := 230 vy := 0 pew_pew
    end
    jump pattern_done

: pattern6
    v0 := 0b00000111
    v0 &= vd
    if v0 == 0b00000111 begin
        v0 := 0b00100000
        v0 &= vd
        if v0 != 0 begin
            y := 28
            vy := 160
        else
            y := 0
            vy := 30
        end
        x := random 31
        x += 31
        vx := 190
        gogo_bullet pew_pew 
    end
    jump pattern_done

: pattern7
    v0 := 0b00000111
    v0 &= vd
    if v0 == 0b00000111 begin
        v0 := 0b00010000
        v0 &= vd
        if v0 != 0 begin
            y := 28
            vy := 160
        else
            y := 0
            vy := 30
        end

        vx := 0
        ax := 0
        x := random 31
        gogo_bullet pew_pew 
    end
    jump pattern_done

: pattern8
    v0 := 0b00001111
    v0 &= vd
    if v0 == 0b00001111 begin
        y >>= vd
        y >>= y
        y >>= y
        x := 50
        vx := 95
        vy := 0
        ax := 133
        gogo_bullet pew_pew 
        vy := 20
        gogo_bullet pew_pew 
        vy := 148
        gogo_bullet pew_pew 
    end
    jump pattern_done

: youwin
    show_you_win_screen
    jump after_title

: patterns
    jump pattern1
    jump pattern2
    jump pattern3
    jump pattern4
    jump pattern5
    jump pattern6
    jump pattern7
    jump pattern8
    jump youwin